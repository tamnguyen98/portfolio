{"version":3,"sources":["assets/images/IMG_20200830_145823_null.jpg","assets/images/portrait1.jpg","assets/images/project1.jpg","assets/images/Skin Care Image.jpg","assets/images/autolab.gif","utils/AppRoute.js","utils/ScrollReveal.js","components/layout/Footer.js","layouts/LayoutDefault.js","utils/SectionProps.js","components/elements/ButtonGroup.js","components/elements/Button.js","components/elements/Image.js","components/elements/Modal.js","components/sections/Hero.js","components/sections/partials/SectionHeader.js","components/sections/FeaturesTiles.js","components/sections/FeaturesSplit.js","components/sections/Testimonial.js","components/elements/FormLabel.js","components/elements/FormHint.js","components/elements/Input.js","components/sections/Cta.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppRoute","Component","component","Layout","layout","rest","undefined","props","Fragment","children","render","ScrollReveal","state","viewportHeight","window","innerHeight","revealEl","checkComplete","length","document","querySelectorAll","elementIsVisible","el","offset","getBoundingClientRect","top","revealElements","i","revealDelay","getAttribute","revealOffset","listenedEl","closest","classList","contains","setTimeout","add","init","setState","addEventListener","handleScroll","handleResize","handleListeners","removeEventListener","throttle","this","React","Footer","className","topOuterDivider","topDivider","classes","classNames","href","defaultProps","LayoutDefault","SectionShared","types","PropTypes","bool","bottomOuterDivider","bottomDivider","hasBgColor","invertColor","defaults","SectionProps","SectionSplitProps","invertMobile","invertDesktop","alignTop","imageFill","SectionTilesProps","pushLeft","ButtonGroup","Button","tag","color","size","loading","wide","wideMobile","disabled","src","width","height","alt","Image","isLoaded","image","createRef","placeholderSrc","w","h","handlePlaceholder","img","placeholder","style","display","before","opacity","remove","placeholderImage","createElement","current","ref","Modal","handleBodyClass","body","keyPress","e","keyCode","handleClose","stopProgagation","stopPropagation","prevProps","show","closeHidden","video","videoTag","onClick","title","frameBorder","allowFullScreen","v-else","controls","aria-label","HeroFull","videoModalActive","openModal","preventDefault","closeModal","outerClasses","innerClasses","data-reveal-delay","data-reveal-value","Portrait2","SectionHeader","data","paragraph","FeaturesTiles","tilesClasses","FeaturesSplit","splitClasses","data-reveal-container","target","class","id","tabindex","role","preload","muted","autoplay","require","Testimonial","FormLabel","labelHidden","htmlFor","FormHint","status","Input","label","type","name","value","formGroup","hasIcon","rows","hint","wrapperClasses","split","Cta","xmlns","d","fill","Home","Hero","ReactGA","initialize","process","REACT_APP_GA_CODE","trackPage","page","set","pageview","App","location","pathname","refs","scrollReveal","currentPage","search","nextPage","exact","path","withRouter","Boolean","hostname","match","history","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f56a5fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_20200830_145823_null.faf24b48.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portrait1.06868dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/project1.54977214.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Skin Care Image.27be9dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/autolab.85c224d7.gif\";","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  ...rest\r\n}) => {\r\n\r\n  Layout = (Layout === undefined) ? props => (<React.Fragment>{props.children}</React.Fragment>) : Layout;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (\r\n        <Layout>\r\n          <Component {...props} />\r\n        </Layout>\r\n      )} />\r\n  );\r\n}\r\n\r\nexport default AppRoute;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { throttle } from 'lodash';\r\n\r\nclass ScrollReveal extends React.Component {\r\n\r\n  state = {\r\n    viewportHeight: window.innerHeight,\r\n    revealEl: []\r\n  };\r\n\r\n  checkComplete = () => {\r\n    return this.state.revealEl.length <= document.querySelectorAll('[class*=reveal-].is-revealed').length;\r\n  };\r\n\r\n  elementIsVisible = (el, offset) => {\r\n    return (el.getBoundingClientRect().top <= this.state.viewportHeight - offset);\r\n  };\r\n\r\n  revealElements = () => {\r\n    if (this.checkComplete()) return;\r\n    for (let i = 0; i < this.state.revealEl.length; i++) {\r\n      let el = this.state.revealEl[i];\r\n      let revealDelay = el.getAttribute('data-reveal-delay');\r\n      let revealOffset = (el.getAttribute('data-reveal-offset') ? el.getAttribute('data-reveal-offset') : '200');\r\n      let listenedEl = (el.getAttribute('data-reveal-container') ? el.closest(el.getAttribute('data-reveal-container')) : el);\r\n      if (this.elementIsVisible(listenedEl, revealOffset) && !el.classList.contains('is-revealed')) {\r\n        if (revealDelay && revealDelay !== 0) {\r\n          setTimeout(function () {\r\n            el.classList.add('is-revealed');\r\n          }, revealDelay);\r\n        } else {\r\n          el.classList.add('is-revealed');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  init = () => {\r\n    setTimeout(() => {\r\n      this.setState({ revealEl: document.querySelectorAll('[class*=reveal-]') }, () => {\r\n        if (!this.checkComplete()) {\r\n          window.addEventListener('scroll', this.handleScroll);\r\n          window.addEventListener('resize', this.handleResize);\r\n        }\r\n        this.revealElements();\r\n      });\r\n    }, 100);\r\n  };\r\n\r\n  handleListeners = () => {\r\n    if (!this.checkComplete()) return;\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n    window.removeEventListener('resize', this.handleResize);\r\n  };\r\n\r\n  handleScroll = throttle(() => {\r\n    this.handleListeners();\r\n    this.revealElements();\r\n  }, 30);\r\n\r\n  handleResize = throttle(() => {\r\n    this.setState({ viewportHeight: window.innerHeight }, () => {\r\n      this.handleListeners();\r\n      this.revealElements();\r\n    });\r\n  }, 30);\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.children()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nScrollReveal.propTypes = {\r\n  children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollReveal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  topOuterDivider: PropTypes.bool,\r\n  topDivider: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n  topOuterDivider: false,\r\n  topDivider: false\r\n}\r\n\r\nclass Footer extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      topOuterDivider,\r\n      topDivider,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const classes = classNames(\r\n      'site-footer center-content-mobile',\r\n      topOuterDivider && 'has-top-divider',\r\n      className\r\n    );\r\n\r\n    return (\r\n      <footer\r\n        {...props}\r\n        className={classes}\r\n      >\r\n        <div className=\"container\">\r\n          <div className={\r\n            classNames(\r\n              'site-footer-inner',\r\n              topDivider && 'has-top-divider'\r\n            )}>\r\n            <div className=\"footer-top space-between text-xxs\">\r\n            </div>\r\n            <div className=\"footer-bottom space-between text-xxs invert-order-desktop\">\r\n              <div className=\"footer-copyright\">Template made by <a href=\"https://cruip.com\">Cruip</a> and modified by Tam Nguyen. All right reserved</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nFooter.propTypes = propTypes;\r\nFooter.defaultProps = defaultProps;\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from '../components/layout/Footer';\r\n\r\nconst LayoutDefault = ({ children }) => (\r\n  <React.Fragment>\r\n    {/* <Header navPosition=\"right\" className=\"reveal-from-bottom\" /> */}\r\n    <main className=\"site-content\">\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default LayoutDefault;  ","import PropTypes from 'prop-types';\r\n\r\n// Props shared by all sections\r\nconst SectionShared = {\r\n  types: {\r\n    topOuterDivider: PropTypes.bool,\r\n    bottomOuterDivider: PropTypes.bool,    \r\n    topDivider: PropTypes.bool,\r\n    bottomDivider: PropTypes.bool,\r\n    hasBgColor: PropTypes.bool,\r\n    invertColor: PropTypes.bool\r\n  },\r\n  defaults: {\r\n    topOuterDivider: false,\r\n    bottomOuterDivider: false,    \r\n    topDivider: false,\r\n    bottomDivider: false,\r\n    hasBgColor: false,\r\n    invertColor: false\r\n  }\r\n}\r\n\r\n// Default section props\r\nexport const SectionProps = {\r\n  types: {\r\n    ...SectionShared.types\r\n  },\r\n  defaults: {\r\n    ...SectionShared.defaults\r\n  }\r\n}\r\n\r\n// Section split props\r\nexport const SectionSplitProps = {\r\n  types: {\r\n    ...SectionShared.types,\r\n    invertMobile: PropTypes.bool,\r\n    invertDesktop: PropTypes.bool,\r\n    alignTop: PropTypes.bool,\r\n    imageFill: PropTypes.bool\r\n  },\r\n  defaults: {\r\n    ...SectionShared.defaults,\r\n    invertMobile: false,\r\n    invertDesktop: false,\r\n    alignTop: false,\r\n    imageFill: false\r\n  }\r\n}\r\n\r\n// Section tiles props\r\nexport const SectionTilesProps = {\r\n  types: {\r\n    ...SectionShared.types,\r\n    pushLeft: PropTypes.bool\r\n  },\r\n  defaults: {\r\n    ...SectionShared.defaults,\r\n    pushLeft: false\r\n  }\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst ButtonGroup = ({\r\n  className,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'button-group',\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      className={classes}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ButtonGroup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  tag: PropTypes.elementType,\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  wide: PropTypes.bool,\r\n  wideMobile: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n  tag: 'button',\r\n  color: '',\r\n  size: '',\r\n  loading: false,\r\n  wide: false,\r\n  wideMobile: false,\r\n  disabled: false\r\n}\r\n\r\nconst Button = ({\r\n  className,\r\n  tag,\r\n  color,\r\n  size,\r\n  loading,\r\n  wide,\r\n  wideMobile,\r\n  disabled,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'button',\r\n    color && `button-${color}`,\r\n    size && `button-${size}`,\r\n    loading && 'is-loading',\r\n    wide && 'button-block',\r\n    wideMobile && 'button-wide-mobile',\r\n    className\r\n  );\r\n\r\n  const Component = tag;\r\n  return (\r\n    <Component\r\n      {...props}\r\n      className={classes}\r\n      disabled={disabled}\r\n    />\r\n  );\r\n}\r\n\r\nButton.propTypes = propTypes;\r\nButton.defaultProps = defaultProps;\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  alt: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  src: undefined,\r\n  width: undefined,\r\n  height: undefined,\r\n  alt: undefined\r\n}\r\n\r\nclass Image extends React.Component {\r\n\r\n  state = {\r\n    isLoaded: false,\r\n  };\r\n\r\n  image = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const placeholderImage = document.createElement('img');\r\n    this.handlePlaceholder(this.image.current, placeholderImage);\r\n  }\r\n\r\n  placeholderSrc = (w, h) => {\r\n    return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${w} ${h}\"%3E%3C/svg%3E`;\r\n  }\r\n\r\n  handlePlaceholder = (img, placeholder) => {\r\n    img.style.display = 'none';\r\n    img.before(placeholder);\r\n    placeholder.src = this.placeholderSrc(\r\n      img.getAttribute('width') || 0,\r\n      img.getAttribute('height') || 0\r\n    );\r\n    placeholder.width = img.getAttribute('width');\r\n    placeholder.height = img.getAttribute('height');\r\n    placeholder.style.opacity = '0';\r\n    img.className && placeholder.classList.add(img.className);\r\n\r\n    img.addEventListener('load', () => {\r\n      placeholder.remove();\r\n      img.style.display = '';\r\n      this.setState({\r\n        isLoaded: true\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      className,\r\n      src,\r\n      width,\r\n      height,\r\n      alt,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <img\r\n        {...props}\r\n        ref={this.image}\r\n        className={className}\r\n        src={src}\r\n        width={width}\r\n        height={height}\r\n        alt={alt} />\r\n    );\r\n  }\r\n}\r\n\r\nImage.propTypes = propTypes;\r\nImage.defaultProps = defaultProps;\r\n\r\nexport default Image;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  handleClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  closeHidden: PropTypes.bool,\r\n  video: PropTypes.string,\r\n  videoTag: PropTypes.oneOf(['iframe', 'video'])\r\n}\r\n\r\nconst defaultProps = {\r\n  children: null,\r\n  show: false,\r\n  closeHidden: false,\r\n  video: '',\r\n  videoTag: 'iframe'\r\n}\r\n\r\nclass Modal extends React.Component {\r\n\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.keyPress);\r\n    document.addEventListener('click', this.stopProgagation);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.keyPress);\r\n    document.removeEventListener('click', this.stopProgagation);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    (prevProps.show !== this.props.show) && this.handleBodyClass();\r\n  }\r\n\r\n  handleBodyClass = () => {\r\n    if (document.querySelectorAll('.modal.is-active').length) {\r\n      document.body.classList.add('modal-is-active');\r\n    } else {\r\n      document.body.classList.remove('modal-is-active');\r\n    }\r\n  }\r\n\r\n  keyPress = (e) => {\r\n    e.keyCode === 27 && this.props.handleClose(e);\r\n  }\r\n\r\n  stopProgagation = (e) => {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      children,\r\n      handleClose,\r\n      show,\r\n      closeHidden,\r\n      video,\r\n      videoTag,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const classes = classNames(\r\n      'modal',\r\n      show && 'is-active',\r\n      video && 'modal-video',\r\n      className\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {show &&\r\n          <div\r\n            {...props}\r\n            className={classes}\r\n            onClick={handleClose}\r\n          >\r\n            <div className=\"modal-inner\" onClick={this.stopProgagation}>\r\n              {video ?\r\n                <div className=\"responsive-video\">\r\n                  {videoTag === 'iframe' ?\r\n                    <iframe\r\n                      title=\"video\"\r\n                      src={video}\r\n                      frameBorder=\"0\"\r\n                      allowFullScreen\r\n                    ></iframe> :\r\n                    <video\r\n                      v-else\r\n                      controls\r\n                      src={video}\r\n                    ></video>\r\n                  }\r\n                </div> :\r\n                <React.Fragment>\r\n                  {!closeHidden &&\r\n                    <button\r\n                      className=\"modal-close\"\r\n                      aria-label=\"close\"\r\n                      onClick={handleClose}\r\n                    ></button>\r\n                  }\r\n                  <div className=\"modal-content\">\r\n                    {children}\r\n                  </div>\r\n                </React.Fragment>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nModal.propTypes = propTypes;\r\nModal.defaultProps = defaultProps;\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionProps } from '../../utils/SectionProps';\r\nimport ButtonGroup from '../elements/ButtonGroup';\r\nimport Button from '../elements/Button';\r\nimport Image from '../elements/Image';\r\nimport Modal from '../elements/Modal';\r\nimport Portrait1 from '../../assets/images/portrait1.jpg'\r\nimport Portrait2 from '../../assets/images/IMG_20200830_145823_null.jpg'\r\n\r\n\r\nconst propTypes = {\r\n  ...SectionProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionProps.defaults\r\n}\r\n\r\nclass HeroFull extends React.Component {\r\n\r\n  state = {\r\n    videoModalActive: false\r\n  }\r\n  openModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ videoModalActive: true });\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ videoModalActive: false });\r\n  } \r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      topOuterDivider,\r\n      bottomOuterDivider,      \r\n      topDivider,\r\n      bottomDivider,\r\n      hasBgColor,\r\n      invertColor,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const outerClasses = classNames(\r\n      'hero section center-content',\r\n      topOuterDivider && 'has-top-divider',\r\n      bottomOuterDivider && 'has-bottom-divider',\r\n      hasBgColor && 'has-bg-color',\r\n      invertColor && 'invert-color',\r\n      className\r\n    );\r\n\r\n    const innerClasses = classNames(\r\n      'hero-inner section-inner',\r\n      topDivider && 'has-top-divider',\r\n      bottomDivider && 'has-bottom-divider'\r\n    );\r\n\r\n    return (\r\n      <section\r\n        {...props}\r\n        className={outerClasses}\r\n      >\r\n        <div className=\"container-sm\">\r\n          <div className={innerClasses}>\r\n            <div className=\"hero-content\">\r\n              <h1 className=\"mt-0 mb-16 reveal-from-bottom\" data-reveal-delay=\"200\">\r\n                Welcome <span className=\"text-color-primary\">Recruiters</span> and <span className=\"text-color-primary\">Friends</span>\r\n              </h1>\r\n              <div className=\"container-xs\">\r\n                <p className=\"m-0 mb-32 reveal-from-bottom\" data-reveal-delay=\"400\">\r\n                  Welcome to my portfolio website! First, I want to thank you for being interested and visiting! If you are a recruiter with open positions, please reach out and lets chat!\r\n                  <br/>\r\n                  <a href=\"tel:360-977-9642\">Click to Call</a> | T.nguyen098@yahoo.com\r\n                </p>\r\n                <div className=\"reveal-from-bottom\" data-reveal-delay=\"600\">\r\n                  <ButtonGroup>\r\n                    <Button tag=\"a\" color=\"primary\" wideMobile href=\"mailto:t.nguyen098@yahoo.com\">\r\n                      Email Me\r\n                    </Button>\r\n                    <Button tag=\"a\" color=\"dark\" wideMobile href=\"https://github.com/tamnguyen98\">\r\n                      Visit Github\r\n                    </Button>                    \r\n                  </ButtonGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"hero-figure reveal-from-bottom illustration-element-01\" data-reveal-value=\"20px\" data-reveal-delay=\"800\">\r\n              <Image\r\n                className=\"has-shadow\"\r\n                src={Portrait2}\r\n                alt=\"Hero\"\r\n                width={896}/>\r\n            </div>       \r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nHeroFull.propTypes = propTypes;\r\nHeroFull.defaultProps = defaultProps;\r\n\r\nexport default HeroFull;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    paragraph: PropTypes.string\r\n  }).isRequired,\r\n  children: PropTypes.node,\r\n  tag: PropTypes.oneOf(['h1', 'h2', 'h3'])\r\n}\r\n\r\nconst defaultProps = {\r\n  children: null,\r\n  tag: 'h2'\r\n}\r\n\r\nclass SectionHeader extends React.Component {\r\n\r\n  render() {\r\n\r\n    const {\r\n      className,\r\n      data,\r\n      children,\r\n      tag,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const classes = classNames(\r\n      'section-header',\r\n      className\r\n    );    \r\n\r\n    const Component = tag;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {(data.title || data.paragraph) &&\r\n          <div\r\n            {...props}\r\n            className={classes}\r\n          >\r\n            <div className=\"container-xs\">\r\n              {children}\r\n              {data.title &&\r\n                <Component className={\r\n                  classNames(\r\n                    'mt-0',\r\n                    data.paragraph ? 'mb-16' : 'mb-0'\r\n                  )}>{data.title}</Component>\r\n              }\r\n              {data.paragraph &&\r\n                <p className=\"m-0\">{data.paragraph}</p>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSectionHeader.propTypes = propTypes;\r\nSectionHeader.defaultProps = defaultProps;\r\n\r\nexport default SectionHeader;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionTilesProps } from '../../utils/SectionProps';\r\nimport SectionHeader from './partials/SectionHeader';\r\nimport Image from '../elements/Image';\r\n\r\nconst propTypes = {\r\n  ...SectionTilesProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionTilesProps.defaults\r\n}\r\n\r\nclass FeaturesTiles extends React.Component {\r\n\r\n  render() {\r\n\r\n    const {\r\n      className,\r\n      topOuterDivider,\r\n      bottomOuterDivider,      \r\n      topDivider,\r\n      bottomDivider,\r\n      hasBgColor,\r\n      invertColor,\r\n      pushLeft,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const outerClasses = classNames(\r\n      'features-tiles section',\r\n      topOuterDivider && 'has-top-divider',\r\n      bottomOuterDivider && 'has-bottom-divider',\r\n      hasBgColor && 'has-bg-color',\r\n      invertColor && 'invert-color',\r\n      className\r\n    );\r\n\r\n    const innerClasses = classNames(\r\n      'features-tiles-inner section-inner pt-0',\r\n      topDivider && 'has-top-divider',\r\n      bottomDivider && 'has-bottom-divider'\r\n    );\r\n\r\n    const tilesClasses = classNames(\r\n      'tiles-wrap center-content',\r\n      pushLeft && 'push-left'\r\n    );\r\n\r\n    const sectionHeader = {\r\n      title: 'Get to know me',\r\n      paragraph: 'I\\'m a graduate at Washington State University with a Bachelor of Science in Computer Science and an Associate of Science in Computer Science at Clark College.\\\r\n      Some of my skills includes (but not limited to)...'\r\n    };\r\n\r\n    return (\r\n      <section\r\n        {...props}\r\n        className={outerClasses}\r\n      >\r\n        <div className=\"container\">\r\n          <div className={innerClasses}>\r\n            <SectionHeader data={sectionHeader} className=\"center-content\" />\r\n            <div className={tilesClasses}>\r\n\r\n              <div className=\"tiles-item reveal-from-bottom\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"features-tiles-item-header\">\r\n                    <div className=\"features-tiles-item-image mb-16\">\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"features-tiles-item-content\">\r\n                    <h4 className=\"mt-0 mb-8 text-color-primary\">\r\n                      Java\r\n                    </h4>\r\n                    <p className=\"m-0 text-sm\">\r\n                      With Java, I have build a variety of projects, ranging from Android App Dev. to file tracking and manipulation apps.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tiles-item reveal-from-bottom\" data-reveal-delay=\"200\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"features-tiles-item-header\">\r\n                    <div className=\"features-tiles-item-image mb-16\">\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"features-tiles-item-content\">\r\n                    <h4 className=\"mt-0 mb-8 text-color-primary\" >\r\n                      C\r\n                    </h4>\r\n                    <p className=\"m-0 text-sm\">\r\n                      The projects I've built some projects using C consists of low-level data parsing to telecommunication via TCP connections with the ability of file transfer.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tiles-item reveal-from-bottom\" data-reveal-delay=\"400\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"features-tiles-item-header\">\r\n                    <div className=\"features-tiles-item-image mb-16\">\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"features-tiles-item-content\">\r\n                    <h4 className=\"mt-0 mb-8 text-color-primary\">\r\n                      Python\r\n                    </h4>\r\n                    <p className=\"m-0 text-sm\">\r\n                    With Python, I've made some of the most useful tools (for myself) more often than other languages, such as a browser automation tool to automatically clock me in and out of work everyday.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tiles-item reveal-from-bottom\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"features-tiles-item-header\">\r\n                    <div className=\"features-tiles-item-image mb-16\">\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"features-tiles-item-content\">\r\n                    <h4 className=\"mt-0 mb-8 text-color-primary\">\r\n                      C#\r\n                    </h4>\r\n                    <p className=\"m-0 text-sm\">\r\n                    The things I've spent programming in C# were only for Game Development using Unity Engine and self-teaching myself ASP.NET (MVC/API).\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tiles-item reveal-from-bottom\" data-reveal-delay=\"200\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"features-tiles-item-header\">\r\n                    <div className=\"features-tiles-item-image mb-16\">\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"features-tiles-item-content\">\r\n                    <h4 className=\"mt-0 mb-8 text-color-primary\">\r\n                      HTML/CSS/JS\r\n                    </h4>\r\n                    <p className=\"m-0 text-sm\">\r\n                    Although I do not favor Front End Web Dev. I have the right amount of experience under my belt, such as Web Dev for a client as a freelancer, and working on this website using React.JS\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div> \r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nFeaturesTiles.propTypes = propTypes;\r\nFeaturesTiles.defaultProps = defaultProps;\r\n\r\nexport default FeaturesTiles;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionSplitProps } from '../../utils/SectionProps';\r\nimport SectionHeader from './partials/SectionHeader';\r\nimport Image from '../elements/Image';\r\n\r\nconst propTypes = {\r\n  ...SectionSplitProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionSplitProps.defaults\r\n}\r\n\r\nclass FeaturesSplit extends React.Component {\r\n\r\n  render() {\r\n\r\n    const {\r\n      className,\r\n      topOuterDivider,\r\n      bottomOuterDivider,      \r\n      topDivider,\r\n      bottomDivider,\r\n      hasBgColor,\r\n      invertColor,\r\n      invertMobile,\r\n      invertDesktop,\r\n      alignTop,\r\n      imageFill,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const outerClasses = classNames(\r\n      'features-split section',\r\n      topOuterDivider && 'has-top-divider',\r\n      bottomOuterDivider && 'has-bottom-divider',\r\n      hasBgColor && 'has-bg-color',\r\n      invertColor && 'invert-color',\r\n      className\r\n    );\r\n\r\n    const innerClasses = classNames(\r\n      'features-split-inner section-inner',\r\n      topDivider && 'has-top-divider',\r\n      bottomDivider && 'has-bottom-divider'\r\n    );\r\n\r\n    const splitClasses = classNames(\r\n      'split-wrap',\r\n      invertMobile && 'invert-mobile',\r\n      invertDesktop && 'invert-desktop',\r\n      alignTop && 'align-top'\r\n    );\r\n\r\n    const sectionHeader = {\r\n      title: 'Some awesome works',\r\n      paragraph: 'Below are some works that I\\'m proud of. They\\'re not in any specific order, and some may be a lot newer than others. Additionally, if they\\'re open source, you can click the title to visit the git repository.'\r\n    };\r\n\r\n    return (\r\n      <section\r\n        {...props}\r\n        className={outerClasses}\r\n      >\r\n        <div className=\"container\">\r\n          <div className={innerClasses}>\r\n            <SectionHeader data={sectionHeader} className=\"center-content\" />\r\n            <div className={splitClasses}>\r\n\r\n            <div className=\"split-item\">\r\n                <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\r\n                  <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                    C# (Winform) Project\r\n                  </div>\r\n                  <h3 className=\"mt-0 mb-12\">\r\n                    <a href=\"https://github.com/tamnguyen98/Doorbell-notifier\" target=\"_blank\">Doorbell Notifier</a>\r\n                  </h3>\r\n                  <p className=\"m-0\">\r\n                    A hardware and software project that alerts your Windows PC when someone rang your doorbell. This is good if your room is far from the bell and you often listen to music through headphones.\r\n                  </p>\r\n                </div>\r\n                <div className={\r\n                  classNames(\r\n                    'split-item-image center-content-mobile reveal-from-bottom',\r\n                    imageFill && 'split-item-image-fill'\r\n                  )}\r\n                  data-reveal-container=\".split-item\">\r\n                    <video class=\"vjs-tech\" id=\"vjs_video_3_html5_api\" tabindex=\"-1\" role=\"application\" preload=\"metadata\" muted=\"muted\" src=\"https://dms.licdn.com/playlist/C4E05AQEKcMvyTaZzmw/mp4-720p-30fp-crf28/0?e=1605340800&amp;v=beta&amp;t=hvpkQlV8PPOGGKMWCQ81EvWTfM57FZM-r4ya_WrP6Dc\" autoplay=\"autoplay\"></video>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n            <div className=\"split-item\">\r\n                <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\r\n                  <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                    C# (Winform) Project\r\n                  </div>\r\n                  <h3 className=\"mt-0 mb-12\">\r\n                    <a href=\"https://github.com/tamnguyen98/Img4Ppt\" target=\"_blank\">Image for Powerpoint</a>\r\n                  </h3>\r\n                  <p className=\"m-0\">\r\n                    This windows application is made with Winform to provide images based on the title and <b>bolded phrases</b> in the description and generate a Powerpoint file.\r\n                  </p>\r\n                </div>\r\n                <div className={\r\n                  classNames(\r\n                    'split-item-image center-content-mobile reveal-from-bottom',\r\n                    imageFill && 'split-item-image-fill'\r\n                  )}\r\n                  data-reveal-container=\".split-item\">\r\n                  <Image\r\n                    src=\"https://github.com/tamnguyen98/Img4Ppt/raw/master/Application-Preview.png\"\r\n                    alt=\"Features split 01\"\r\n                    width={528}\r\n                    height={396} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"split-item\">\r\n                <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\r\n                  <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                    Java Project\r\n                  </div>\r\n                  <h3 className=\"mt-0 mb-12\">\r\n                    <a href=\"https://github.com/tamnguyen98/Update-Transfer-Only\" target=\"_blank\">Transfer app's update only tool</a>\r\n                  </h3>\r\n                  <p className=\"m-0\">\r\n                    This tool was made in Java so that it can work cross-platform, and what it does is it scans through an old copy of the application, keeps track of every file's last modified date and then compares it to a recently updated directory and see what was changed (update) in the application's directory. From there, it copies <u>only</u> the changes to the destination.\r\n                  </p>\r\n                </div>\r\n                <div className={\r\n                  classNames(\r\n                    'split-item-image center-content-mobile reveal-from-bottom',\r\n                    imageFill && 'split-item-image-fill'\r\n                  )}\r\n                  data-reveal-container=\".split-item\">\r\n                  <Image\r\n                    src={require('./../../assets/images/project1.jpg')}\r\n                    alt=\"Features split 01\"\r\n                    width={528}\r\n                    height={396} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"split-item\">\r\n                <div className=\"split-item-content center-content-mobile reveal-from-right\" data-reveal-container=\".split-item\">\r\n                  <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                    Android Project\r\n                  </div>                  \r\n                  <h3 className=\"mt-0 mb-12\">\r\n                    <a href=\"https://play.google.com/store/apps/details?id=info.ingredientchecker.imgscanner\">Skin Care Analyzer</a>\r\n                  </h3>\r\n                  <p className=\"m-0\">\r\n                  As seen from the video, this app lets the user take a picture of their <i>skin care product</i>'s ingredients, which will grab the text using an OCR to analyze and calculate the quality of the product.\r\n                  </p>\r\n                </div>\r\n                <div className={\r\n                  classNames(\r\n                    'split-item-image center-content-mobile reveal-from-bottom',\r\n                    imageFill && 'split-item-image-fill'\r\n                  )}\r\n                  data-reveal-container=\".split-item\">\r\n                  <Image\r\n                    src={require('./../../assets/images/Skin Care Image.jpg')}\r\n                    alt=\"Features split 03\"\r\n                    width={528}\r\n                    height={396} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"split-item\">\r\n                <div className=\"split-item-content center-content-mobile reveal-from-left\" data-reveal-container=\".split-item\">\r\n                  <div className=\"text-xxs text-color-primary fw-600 tt-u mb-8\">\r\n                    Ruby on Rails Project\r\n                  </div>                  \r\n                  <h3 className=\"mt-0 mb-12\">\r\n                    <a href=\"https://github.com/autolab/Autolab/pull/1139\" target=\"_blank\">Autolab dark theme implementation</a>\r\n                  </h3>\r\n                  <p className=\"m-0\">\r\n                  For my capstone project at WSU, I was working on implementing <a href=\"http://www.autolabproject.com/\" target=\"_blank\">Autolab</a>'s latest update onto the school system. During that time, one of my big projects was implementing a dark mode theme that users can toggle on and off and have it reload the theme when they signed in again. Because of the success, I decide to make a PR to the original repo.\r\n                  </p>\r\n                </div>\r\n                <div className={\r\n                  classNames(\r\n                    'split-item-image center-content-mobile reveal-from-bottom',\r\n                    imageFill && 'split-item-image-fill'\r\n                  )}\r\n                  data-reveal-container=\".split-item\">\r\n                  <Image\r\n                    src={require('./../../assets/images/autolab.gif')}\r\n                    alt=\"Features split 03\"\r\n                    width={528}\r\n                    height={396} />\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nFeaturesSplit.propTypes = propTypes;\r\nFeaturesSplit.defaultProps = defaultProps;\r\n\r\nexport default FeaturesSplit;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { SectionTilesProps } from '../../utils/SectionProps';\r\nimport SectionHeader from './partials/SectionHeader';\r\n\r\nconst propTypes = {\r\n  ...SectionTilesProps.types\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionTilesProps.defaults\r\n}\r\n\r\nclass Testimonial extends React.Component {\r\n\r\n  render() {\r\n\r\n    const {\r\n      className,\r\n      topOuterDivider,\r\n      bottomOuterDivider,      \r\n      topDivider,\r\n      bottomDivider,\r\n      hasBgColor,\r\n      invertColor,\r\n      pushLeft,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const outerClasses = classNames(\r\n      'testimonial section',\r\n      topOuterDivider && 'has-top-divider',\r\n      bottomOuterDivider && 'has-bottom-divider',\r\n      hasBgColor && 'has-bg-color',\r\n      invertColor && 'invert-color',\r\n      className\r\n    );\r\n\r\n    const innerClasses = classNames(\r\n      'testimonial-inner section-inner',\r\n      topDivider && 'has-top-divider',\r\n      bottomDivider && 'has-bottom-divider'\r\n    );\r\n\r\n    const tilesClasses = classNames(\r\n      'tiles-wrap',\r\n      pushLeft && 'push-left'\r\n    );\r\n\r\n    const sectionHeader = {\r\n      title: 'Recommendations',\r\n      paragraph: ''\r\n    };\r\n\r\n    return (\r\n      <section\r\n        {...props}\r\n        className={outerClasses}\r\n      >\r\n        <div className=\"container\">\r\n          <div className={innerClasses}>\r\n            <SectionHeader data={sectionHeader} className=\"center-content\" />\r\n            <div className={tilesClasses}>\r\n\r\n              <div className=\"tiles-item reveal-from-right\" data-reveal-delay=\"200\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"testimonial-item-content\">\r\n                    <p className=\"text-sm mb-0\">\r\n                    — He is a passionate programmer and always is the first to figure out any bugs with code in a team project... Tam is also very keen with problem solving and is very quick with his thinking which will make a fantastic addition to any team he joins in the future\r\n                      </p>\r\n                  </div>\r\n                  <div className=\"testimonial-item-footer text-xs mt-32 mb-0 has-top-divider\">\r\n                    <span className=\"testimonial-item-name text-color-high\">Amanda S.</span>\r\n                    <span className=\"text-color-low\"> / </span>\r\n                    <span className=\"testimonial-item-link\">\r\n                      Co-worker\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tiles-item reveal-from-bottom\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"testimonial-item-content\">\r\n                    <p className=\"text-sm mb-0\">\r\n                      — Needed a new website for our business and Tam delivered. Additionally, he taught us how to keep our website up for cheap!\r\n                      </p>\r\n                  </div>\r\n                  <div className=\"testimonial-item-footer text-xs mt-32 mb-0 has-top-divider\">\r\n                    <span className=\"testimonial-item-name text-color-high\">LGD Professional Painting</span>\r\n                    <span className=\"text-color-low\"> / </span>\r\n                    <span className=\"testimonial-item-link\">\r\n                      <a href=\"https://lgdprofessionalpainting.expert/\" target=\"_blank\">Client</a>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tiles-item reveal-from-left\" data-reveal-delay=\"200\">\r\n                <div className=\"tiles-item-inner\">\r\n                  <div className=\"testimonial-item-content\">\r\n                    <p className=\"text-sm mb-0\">\r\n                      — Tam is a dependable worker. I was able to ask him to complete any task and he always exceeded expectation. He requires little to no oversight and produces quality work every time.\r\n                      </p>\r\n                  </div>\r\n                  <div className=\"testimonial-item-footer text-xs mt-32 mb-0 has-top-divider\">\r\n                    <span className=\"testimonial-item-name text-color-high\">Rebecca Daniel</span>\r\n                    <span className=\"text-color-low\"> / </span>\r\n                    <span className=\"testimonial-item-link\">\r\n                      Co-worker\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nTestimonial.propTypes = propTypes;\r\nTestimonial.defaultProps = defaultProps;\r\n\r\nexport default Testimonial;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  labelHidden: PropTypes.bool,\r\n  id: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  children: null,\r\n  labelHidden: false,\r\n  id: null\r\n}\r\n\r\nconst FormLabel = ({\r\n  className,\r\n  children,\r\n  labelHidden,\r\n  id,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'form-label',\r\n    labelHidden && 'screen-reader',\r\n    className\r\n  );\r\n\r\n  return (\r\n    <label\r\n      {...props}\r\n      className={classes}\r\n      htmlFor={id}\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n}\r\n\r\nFormLabel.propTypes = propTypes;\r\nFormLabel.defaultProps = defaultProps;\r\n\r\nexport default FormLabel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  status: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  children: null,\r\n  status: false\r\n}\r\n\r\nconst FormHint = ({\r\n  children,\r\n  className,\r\n  status,\r\n  ...props\r\n}) => {\r\n\r\n  const classes = classNames(\r\n    'form-hint',\r\n    status && `text-color-${status}`,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      className={classes}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nFormHint.propTypes = propTypes;\r\nFormHint.defaultProps = defaultProps;\r\n\r\nexport default FormHint;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FormLabel from './FormLabel';\r\nimport FormHint from './FormHint';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  labelHidden: PropTypes.bool,\r\n  type: PropTypes.oneOf(['textarea', 'text', 'email', 'tel', 'password', 'number', 'search', 'color', 'date', 'time', 'datetime-local']),\r\n  name: PropTypes.string,\r\n  status: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  formGroup: PropTypes.string,\r\n  hasIcon: PropTypes.string,\r\n  size: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  rows: PropTypes.number,\r\n  hint: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  children: null,\r\n  label: '',\r\n  labelHidden: false,\r\n  type: 'text',\r\n  name: undefined,\r\n  status: '',\r\n  disabled: false,\r\n  value: undefined,\r\n  formGroup: null,\r\n  hasIcon: null,\r\n  size: '',\r\n  placeholder: '',\r\n  rows: 3,\r\n  hint: null\r\n}\r\n\r\nconst Input = ({\r\n  className,\r\n  children,\r\n  label,\r\n  labelHidden,\r\n  type,\r\n  name,\r\n  status,\r\n  disabled,\r\n  value,\r\n  formGroup,\r\n  hasIcon,\r\n  size,\r\n  placeholder,\r\n  rows,\r\n  hint,\r\n  ...props\r\n}) => {\r\n\r\n  const wrapperClasses = classNames(\r\n    (formGroup && formGroup !== '') && (formGroup === 'desktop' ? 'form-group-desktop' : 'form-group'),\r\n    (hasIcon && hasIcon !== '') && 'has-icon-' + hasIcon\r\n  );\r\n\r\n  const classes = classNames(\r\n    'form-input',\r\n    size && `form-input-${size}`,\r\n    status && `form-${status}`,\r\n    className\r\n  );\r\n\r\n  const Component = type === 'textarea' ? 'textarea' : 'input';\r\n  return (\r\n    <React.Fragment>\r\n      {label && <FormLabel labelHidden={labelHidden} id={props.id}>{label}</FormLabel>}\r\n      <div\r\n        className={wrapperClasses}\r\n      >\r\n        <Component\r\n          {...props}\r\n          type={type !== 'textarea' ? type : null}\r\n          className={classes}\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          rows={type === 'textarea' ? rows : null}\r\n        />\r\n        {children}\r\n      </div>\r\n      {hint && <FormHint status={status}>{hint}</FormHint>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nInput.propTypes = propTypes;\r\nInput.defaultProps = defaultProps;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { SectionProps } from '../../utils/SectionProps';\r\nimport Input from '../elements/Input';\r\n\r\nconst propTypes = {\r\n  ...SectionProps.types,\r\n  split: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n  ...SectionProps.defaults,\r\n  split: false\r\n}\r\n\r\nclass Cta extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      topOuterDivider,\r\n      bottomOuterDivider,      \r\n      topDivider,\r\n      bottomDivider,\r\n      hasBgColor,\r\n      invertColor,\r\n      split,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const outerClasses = classNames(\r\n      'cta section center-content-mobile reveal-from-bottom',\r\n      topOuterDivider && 'has-top-divider',\r\n      bottomOuterDivider && 'has-bottom-divider',\r\n      hasBgColor && 'has-bg-color',\r\n      invertColor && 'invert-color',\r\n      className\r\n    );\r\n\r\n    const innerClasses = classNames(\r\n      'cta-inner section-inner',\r\n      topDivider && 'has-top-divider',\r\n      bottomDivider && 'has-bottom-divider',\r\n      split && 'cta-split'\r\n    );\r\n\r\n    return (\r\n      <section\r\n        {...props}\r\n        className={outerClasses}\r\n      >\r\n        <div className=\"container\">\r\n          <div\r\n            className={innerClasses}\r\n          >\r\n            <div className=\"cta-slogan\">\r\n              <h3 className=\"m-0\">\r\n                For previewing layouts and visual?\r\n              </h3>\r\n            </div>\r\n            <div className=\"cta-action\">\r\n              <Input id=\"newsletter\" type=\"email\" label=\"Subscribe\" labelHidden hasIcon=\"right\" placeholder=\"Your best email\">\r\n                <svg width=\"16\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M9 5H1c-.6 0-1 .4-1 1s.4 1 1 1h8v5l7-6-7-6v5z\" fill=\"#376DF9\" />\r\n                </svg>\r\n              </Input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCta.propTypes = propTypes;\r\nCta.defaultProps = defaultProps;\r\n\r\nexport default Cta;","import React from 'react';\r\n// import sections\r\nimport Hero from '../components/sections/Hero';\r\nimport FeaturesTiles from '../components/sections/FeaturesTiles';\r\nimport FeaturesSplit from '../components/sections/FeaturesSplit';\r\nimport Testimonial from '../components/sections/Testimonial';\r\nimport Cta from '../components/sections/Cta';\r\n\r\nclass Home extends React.Component {\r\n\r\n  state = {\r\n    videoModalActive: false\r\n  }\r\n  openModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ videoModalActive: true });\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ videoModalActive: false });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Hero className=\"illustration-section-01\" />\r\n        <FeaturesTiles />       \r\n        <FeaturesSplit invertMobile topDivider imageFill className=\"illustration-section-02\" />\r\n        <Testimonial topDivider />\r\n        {/* <Cta split /> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { withRouter, Switch } from 'react-router-dom';\r\nimport AppRoute from './utils/AppRoute';\r\nimport ScrollReveal from './utils/ScrollReveal';\r\nimport ReactGA from 'react-ga';\r\n\r\n// Layouts\r\nimport LayoutDefault from './layouts/LayoutDefault';\r\n\r\n// Views \r\nimport Home from './views/Home';\r\n\r\n// Initialize Google Analytics\r\nReactGA.initialize(process.env.REACT_APP_GA_CODE);\r\n\r\nconst trackPage = page => {\r\n  ReactGA.set({ page });\r\n  ReactGA.pageview(page);\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const page = this.props.location.pathname;\r\n    document.body.classList.add('is-loaded')\r\n    this.refs.scrollReveal.init();\r\n    trackPage(page); \r\n  }\r\n\r\n  // Route change\r\n  componentDidUpdate(prevProps) {\r\n    const currentPage = prevProps.location.pathname + prevProps.location.search;\r\n    const nextPage = this.props.location.pathname + this.props.location.search;    \r\n    if (currentPage !== nextPage) {\r\n      this.refs.scrollReveal.init();\r\n      trackPage(nextPage);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ScrollReveal\r\n        ref=\"scrollReveal\"\r\n        children={() => (\r\n          <Switch>\r\n            <AppRoute exact path=\"/\" component={Home} layout={LayoutDefault} />\r\n          </Switch>\r\n        )} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(props => <App {...props} />);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//import './App.css';\r\nimport './assets/scss/style.scss';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}